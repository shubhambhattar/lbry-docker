## This docker-compose.yml file should serve as an example to help you test out spee.ch
## If this works fine in your environment you may potentially run from this file but it may change in the future.
## Ideally if you need to modify the settings in this file you could create a docker-compose.override.yml containing only values you wish to override from this one.
## Documentation on compose overrides: https://docs.docker.com/compose/extends/

version: '3.4'
services:
############
## Speech ##
############
  speech:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./data/speech:/data
    networks:
      green:
        ipv4_address: 10.5.1.6
        aliases:
          - speech

#############
## Lbrynet ##
#############
  traefik:
    build:
      context: ../lbrynet-daemon/
      dockerfile: Dockerfile
    restart: always
    environment:
      ## These variables are stored in the .env file next to this docker-compose.yml file.
      ## I will include a default .env file and .gitignore the ".env" pattern so you should be able to just git pull in the future if you need to.
      MYSQL_SERVER: ${MYSQL_SERVER}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - 4444:4444
      - 50001:50001
    ## host volumes for persistent data such as wallet private keys.
    volumes:
      - ./data/traefik:/data
    networks:
      green:
        ipv4_address: 10.5.1.7
        aliases:
          - lbrynet

#############
## MariaDB ##
#############
## https://hub.docker.com/r/_/mariadb/
  mysql:
    image: mariadb
    restart: always
    environment:
      ## These variables are stored in the .env file next to this docker-compose.yml file.
      ## I will include a default .env file and .gitignore the ".env" pattern so you should be able to just git pull in the future if you need to.
      MYSQL_SERVER: ${MYSQL_SERVER}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    # expose:
    #   - 3306
    ports:
      - 3306:3306
    volumes:
      - ./data/db:/var/lib/mysql
    networks:
      green:
        ipv4_address: 10.5.1.8
        aliases:
          - mysql

#########################
## Network Definitions ##
#########################
networks:
  green:
    driver: bridge
    ipam:
        config:
          - subnet: 10.5.1.0/16
